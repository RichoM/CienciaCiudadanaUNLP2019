[zenodo := FileStream readOnlyFileNamed: 'zenodo.csv' do: [:file | CSVParser parse: file].scholar := FileStream readOnlyFileNamed: 'google_scholar.csv' do: [:file | CSVParser parse: file].scopus := FileStream readOnlyFileNamed: 'scopus.csv' do: [:file | CSVParser parse: file].escapeCell := [:str |	(str includesAnyOf: ',', String crlf, '"')		ifTrue: ['"', (str copyReplaceAll: '"' with: '""'), '"']		ifFalse: [str]].].FileStream forceNewFileNamed: 'all.csv' do: [:file |	file nextPutAll: 'include,source,title,authors,url,doi'; cr.		zenodo allButFirstDo: [:row |		{			((row at: 1) beginsWith: 'SI') ifTrue: 'SI' ifFalse: 'NO'.			'zenodo'.			row at: 2.			row at: 13.			''.			row at: 11		} do: [:cell | file nextPutAll: (escapeCell value: cell)]			separatedBy: [file nextPutAll: ','].		file cr].		scholar allButFirstDo: [:row |		{			((row at: 1) beginsWith: 'SI') ifTrue: 'SI' ifFalse: 'NO'.			'google scholar'.			row at: 3.			row at: 5.			row at: 6.			''		} do: [:cell | file nextPutAll: (escapeCell value: cell)]			separatedBy: [file nextPutAll: ','].		file cr].			scopus allButFirstDo: [:row |		{			((row at: 1) beginsWith: 'SI') ifTrue: 'SI' ifFalse: 'NO'.			'scopus'.			row at: 2.			row at: 7.			row at: 5.			row at: 6		} do: [:cell | file nextPutAll: (escapeCell value: cell)]			separatedBy: [file nextPutAll: ','].		file cr].	]